{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/berke/Desktop/VA 325 Project/FIFA-FM-Scout/playerscout/src/components/CustomInput/CustomInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\"; // @material-ui/icons\n\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"../../assets/jss/material-dashboard-react/components/customInputStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success\n  } = props;\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined\n  });\n  return /*#__PURE__*/_jsxDEV(FormControl, { ...formControlProps,\n    className: formControlProps.className + \" \" + classes.formControl,\n    children: [labelText !== undefined ? /*#__PURE__*/_jsxDEV(InputLabel, {\n      className: classes.labelRoot + labelClasses,\n      htmlFor: id,\n      ...labelProps,\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Input, {\n      classes: {\n        root: marginTop,\n        disabled: classes.disabled,\n        underline: underlineClasses\n      },\n      id: id,\n      ...inputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(Clear, {\n      className: classes.feedback + \" \" + classes.labelRootError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : success ? /*#__PURE__*/_jsxDEV(Check, {\n      className: classes.feedback + \" \" + classes.labelRootSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomInput, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomInput;\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/Users/berke/Desktop/VA 325 Project/FIFA-FM-Scout/playerscout/src/components/CustomInput/CustomInput.js"],"names":["React","classNames","PropTypes","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","success","labelClasses","labelRootError","labelRootSuccess","underlineClasses","underlineError","underlineSuccess","underline","marginTop","undefined","className","formControl","labelRoot","root","disabled","feedback","propTypes","node","object","string","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/customInputStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error,\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true,\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined,\n  });\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses,\n        }}\n        id={id}\n        {...inputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}